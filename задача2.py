'''
Создатели нового языка программирования D++ поняли, что какое бы большое ограничение на тип SuperLongInt они ни наложили, некоторым программистам потребуется работать с ещё большими числами. Ограничение в 1000 цифр так мало… Вам нужно найти сумму двух целых чисел размером до 1 000 000 цифр.
Исходные данные
Первая строка содержит целое число N — длину чисел (1 ≤ N ≤ 1 000 000). В следующих N строках следуют записанные в столбик числа, каждая строка содержит по две цифры, разделённые пробелом. Каждое из двух чисел не меньше 1, а длина суммы этих чисел не превосходит N. Числа могут содержать ведущие нули.
Результат
Выведите в одной строке ровно N цифр, представляющих сумму этих двух чисел.
'''

N = int(input())
a = []
b = []
for _ in range(N):
    num1, num2 = map(int, input().split())
    a.append(num1)
    b.append(num2)

s = [0] * N
carry = False

for i in range(N - 1, -1, -1):
    s[i] = a[i] + b[i]
    if carry:
        s[i] += 1
        carry = False

    if s[i] > 9:
        s[i] -= 10
        carry = True

result = ''.join(map(str, s))
print(result)
